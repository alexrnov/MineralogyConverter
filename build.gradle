buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'MineralogyConverter'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  compile 'org.codehaus.groovy:groovy-all:2.3.11'
  testCompile("org.junit.jupiter:junit-jupiter-api:5.4.0") // api junit5
  testCompile("org.junit.jupiter:junit-jupiter-engine:5.4.0") // среда выполнения junit5
  testCompile("io.mockk:mockk:1.8.1")// библиотека для создания мокков
  // зависимости для работы с excel
  compile group: 'org.apache.poi', name: 'poi', version: '4.0.1'
  compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.1'
  compile group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: '4.0.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava.options.encoding = 'UTF-8' //необходимо для правильного отображения кириллицы

tasks.withType(JavaCompile) { //также необходимо для правильного отображения кириллицы
  options.encoding = 'UTF-8'
}

sourceSets { //добавить файлы fxml, css, png при сборке
  main {
    resources {
      srcDirs = ["src/main/resources"]
      includes = ["**/*.fxml", "**/*.css", "**/*.png"]
    }
  }
}